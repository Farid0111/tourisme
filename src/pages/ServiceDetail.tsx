import React, { useState, useEffect, useRef } from 'react';
import { useParams, useNavigate } from 'react-router-dom';
import { motion } from 'framer-motion';

import Reviews from '../components/Reviews';
import { activitiesData } from '../utils/activitiesData';
import ImageGallery from '../components/ImageGallery';
import '../styles/ServiceDetail.css';
import ChatOrder, { ChatOrderHandle } from '../components/ChatOrder';
import ServiceDetailButton from '../components/ServiceDetailButton';

const ServiceDetail: React.FC = () => {
  const { id } = useParams<{ id?: string }>();
  const navigate = useNavigate();
  const reviewsRef = useRef<HTMLDivElement>(null);
  const chatOrderRef = useRef<ChatOrderHandle>(null);
  
  const [showOrderConfirmation, setShowOrderConfirmation] = useState(false);
  const [activeTab, setActiveTab] = useState('description');
  
  // Find the activity with the given ID
  const activity = activitiesData.find(a => a.id === Number(id));
  
  // If activity not found, redirect to activities page
  useEffect(() => {
    if (!activity) {
      navigate('/activities');
    }
  }, [activity, navigate]);
  
  // If activity is undefined, don't render anything
  if (!activity) return null;
  
  // Prepare images for gallery
  const galleryImages = activity.images
    .filter(img => img)
    .map(img => ({
      original: img.startsWith('/') ? img : `/images/${img}`,
      thumbnail: img.startsWith('/') ? img : `/images/${img}`,
    }));
  
  // Function to scroll to reviews section
  const scrollToReviews = () => {
    reviewsRef.current?.scrollIntoView({ behavior: 'smooth' });
  };

  // Function to open chat
  const handleOpenChat = () => {
    chatOrderRef.current?.openChat();
  };

  // Sample FAQ data - can be moved to the activity data in a real application
  const faqItems = [
    {
      question: "Quelle est la meilleure p√©riode pour visiter ?",
      answer: "La meilleure p√©riode pour cette activit√© est de juin √† septembre et de d√©cembre √† f√©vrier, pendant les saisons s√®ches. La visibilit√© est meilleure et les chemins sont moins boueux."
    },
    {
      question: "Cette activit√© convient-elle aux enfants ?",
      answer: "Cette activit√© est recommand√©e pour les enfants de plus de 12 ans en raison de sa nature physique. Veuillez nous consulter pour des options adapt√©es aux familles avec de jeunes enfants."
    },
    {
      question: "Que dois-je apporter ?",
      answer: "Nous recommandons d'apporter des v√™tements confortables, des chaussures de randonn√©e, une veste imperm√©able, une protection solaire et une bouteille d'eau r√©utilisable."
    },
    {
      question: "Quelle est la politique d'annulation ?",
      answer: "Une annulation jusqu'√† 72 heures avant le d√©part vous donne droit √† un remboursement complet. Une annulation entre 24 et 72 heures avant le d√©part vous donne droit √† un remboursement de 50%. Aucun remboursement n'est accord√© pour les annulations dans les 24 heures pr√©c√©dant le d√©part."
    }
  ];

  return (
    <motion.div 
      className="service-detail"
      initial={{ opacity: 0 }}
      animate={{ opacity: 1 }}
      exit={{ opacity: 0 }}
    >
      {/* Hero section with title and image */}
      <div 
        className="service-hero" 
        style={{ backgroundImage: `linear-gradient(rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5)), url(${activity.image})` }}
      >
        <div className="container">
          <h1>{activity.title}</h1>
          <div className="service-meta">
            <div className="service-meta-item">
              <span className="meta-icon">üìÖ</span>
              <span>{activity.duration}</span>
            </div>
            <div className="service-meta-item">
              <span className="meta-icon">üìç</span>
              <span>{activity.region}</span>
            </div>
            <div className="service-meta-item">
              <span className="meta-icon">üí∞</span>
              <span>{activity.price}</span>
            </div>
          </div>
        </div>
      </div>
      
      {/* Main content */}
      <div className="container">
        <div className="service-content">
          {/* Left column: Content */}
          <div className="service-main">
            {/* Gallery */}
            <div className="service-gallery">
              <ImageGallery images={galleryImages} />
            </div>
            
            {/* Navigation tabs */}
            <div className="service-tabs">
              <button 
                className={`tab-button ${activeTab === 'description' ? 'active' : ''}`}
                onClick={() => setActiveTab('description')}
              >
                Description
              </button>
              <button 
                className={`tab-button ${activeTab === 'itinerary' ? 'active' : ''}`}
                onClick={() => setActiveTab('itinerary')}
              >
                Itin√©raire
              </button>
              <button 
                className={`tab-button ${activeTab === 'details' ? 'active' : ''}`}
                onClick={() => setActiveTab('details')}
              >
                D√©tails
              </button>
              <button 
                className={`tab-button ${activeTab === 'faq' ? 'active' : ''}`}
                onClick={() => setActiveTab('faq')}
              >
                FAQ
              </button>
              <button 
                className={`tab-button ${activeTab === 'reviews' ? 'active' : ''}`}
                onClick={() => {
                  setActiveTab('reviews');
                  scrollToReviews();
                }}
              >
                Avis
              </button>
            </div>
            
            {/* Tab content */}
            <div className="tab-content">
              {/* Description Tab */}
              {activeTab === 'description' && (
                <div className="description-tab">
                  <h2>√Ä propos de cette activit√©</h2>
                  <p>{activity.description}</p>
                  
                  {activity.highlights && (
                    <div className="highlights">
                      <h3>Points forts</h3>
                      <ul className="highlights-list">
                        {activity.highlights.map((highlight, index) => (
                          <li key={index}>
                            <span className="highlight-icon">‚û§</span>
                            <span>{highlight}</span>
                          </li>
                        ))}
                      </ul>
                    </div>
                  )}
                </div>
              )}
              
              {/* Itinerary Tab */}
              {activeTab === 'itinerary' && (
                <div className="itinerary-tab">
                  <h2>Itin√©raire d√©taill√©</h2>
                  {activity.itinerary ? (
                    <div className="itinerary-timeline">
                      {activity.itinerary.map((day, index) => (
                        <div key={index} className="itinerary-day">
                          <div className="day-header">
                            <h3>Jour {index + 1}</h3>
                            {day.title && <span className="day-title">{day.title}</span>}
                          </div>
                          <p>{day.description}</p>
                          {day.activities && (
                            <ul className="day-activities">
                              {day.activities.map((activity, actIndex) => (
                                <li key={actIndex}>{activity}</li>
                              ))}
                            </ul>
                          )}
                        </div>
                      ))}
                    </div>
                  ) : (
                    <p>Aucun itin√©raire d√©taill√© disponible pour cette activit√©. Veuillez nous contacter pour plus d'informations.</p>
                  )}
                </div>
              )}
              
              {/* Details Tab */}
              {activeTab === 'details' && (
                <div className="details-tab">
                  <h2>D√©tails</h2>
                  
                  <div className="included-section">
                    <h3>Inclus</h3>
                    <ul className="included-list">
                      {activity.included.map((item, index) => (
                        <li key={index} className="included-item">
                          <span className="included-icon">‚úì</span>
                          <span>{item}</span>
                        </li>
                      ))}
                    </ul>
                  </div>
                  
                  <div className="not-included-section">
                    <h3>Non inclus</h3>
                    <ul className="not-included-list">
                      {activity.notIncluded.map((item, index) => (
                        <li key={index} className="not-included-item">
                          <span className="not-included-icon">‚úó</span>
                          <span>{item}</span>
                        </li>
                      ))}
                    </ul>
                  </div>
                  
                  <div className="logistics-section">
                    <h3>Logistique</h3>
                    <div className="logistics-cards">
                      {activity.accommodation && (
                        <div className="logistics-card">
                          <div className="logistics-icon">
                            <span>üè®</span>
                          </div>
                          <div className="logistics-details">
                            <h4>H√©bergement</h4>
                            <p>{activity.accommodation}</p>
                          </div>
                        </div>
                      )}
                      
                      {activity.transport && (
                        <div className="logistics-card">
                          <div className="logistics-icon">
                            <span>üöå</span>
                          </div>
                          <div className="logistics-details">
                            <h4>Transport</h4>
                            <p>{activity.transport}</p>
                          </div>
                        </div>
                      )}
                      
                      {activity.meals && (
                        <div className="logistics-card">
                          <div className="logistics-icon">
                            <span>üçΩÔ∏è</span>
                          </div>
                          <div className="logistics-details">
                            <h4>Repas</h4>
                            <p>{activity.meals}</p>
                          </div>
                        </div>
                      )}
                    </div>
                  </div>
                </div>
              )}
              
              {/* FAQ Tab */}
              {activeTab === 'faq' && (
                <div className="faq-tab">
                  <h2>Questions fr√©quemment pos√©es</h2>
                  <div className="faq-accordion">
                    {faqItems.map((faq, index) => (
                      <div key={index} className="faq-item">
                        <h3 className="faq-question">{faq.question}</h3>
                        <p className="faq-answer">{faq.answer}</p>
                      </div>
                    ))}
                  </div>
                </div>
              )}
              
              {/* Reviews Tab */}
              {activeTab === 'reviews' && (
                <div className="reviews-tab" ref={reviewsRef}>
                  <h2>Avis clients</h2>
                  <Reviews activityId={Number(id)} />
                </div>
              )}
            </div>
          </div>
          
          {/* Right column: Booking widget */}
          <div className="service-sidebar">
            <motion.div 
              className="booking-widget"
              initial={{ y: 20, opacity: 0 }}
              animate={{ y: 0, opacity: 1 }}
              transition={{ delay: 0.3 }}
            >
              <h3>R√©server cette activit√©</h3>
              <p className="widget-price">√Ä partir de {activity.price}</p>
              <p className="widget-duration">Dur√©e: {activity.duration}</p>
              
              <div className="booking-actions">
                <ServiceDetailButton
                  activityId={activity.id}
                  activityTitle={activity.title}
                  price={activity.price}
                  image={activity.image}
                  onClick={handleOpenChat}
                />
              </div>
              
              {showOrderConfirmation && (
                <motion.div 
                  className="confirmation-message"
                  initial={{ opacity: 0, y: 10 }}
                  animate={{ opacity: 1, y: 0 }}
                  exit={{ opacity: 0 }}
                >
                  Commande confirm√©e
                </motion.div>
              )}
              
              <div className="contact-help">
                <span className="contact-icon">üìû</span>
                <div>
                  <p className="contact-title">Besoin d'aide ?</p>
                  <p className="contact-info">+250 788 123 456</p>
                </div>
              </div>
            </motion.div>
          </div>
        </div>
      </div>
      
      {/* The invisible global chat that will be displayed when handleOpenChat is called */}
      <ChatOrder ref={chatOrderRef} />
    </motion.div>
  );
};

export default ServiceDetail; 